apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o kubernetes/
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes/
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/data-acquisition: "true"
        io.kompose.service: kafka
    spec:
      containers:
        - args:
            - sh
            - -c
            - |
              /opt/bitnami/scripts/kafka/run.sh && java -jar /app/raining-triggers.jar
          env:
            - name: END_STATION_ID
              value: "5"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
            - name: KAFKA_BOOTSTRAP_SERVER
              value: kafka:9092
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: KAFKA_LISTENERS
              value: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: OUTPUT_TOPIC
              value: rainning-triggers
            - name: START_STATION_ID
              value: "1"
          image: docker.io/bitnami/kafka:3.4
          name: kafka
          ports:
            - containerPort: 29092
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: kafka-claim0
      restartPolicy: Always
      volumes:
        - name: kafka-claim0
          persistentVolumeClaim:
            claimName: kafka-claim0
status: {}
