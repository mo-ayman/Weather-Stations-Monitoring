apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic-search
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elastic-search
  template:
    metadata:
      labels:
        app: elastic-search
    spec:
      containers:
        - name: elastic-search
          image: docker.elastic.co/elasticsearch/elasticsearch:7.17.21
          imagePullPolicy: IfNotPresent
          env:
            - name: discovery.type
              value: "single-node"
          ports:
            - containerPort: 9200
            - containerPort: 9300
          volumeMounts:
            - name: base-station-elastic-data
              mountPath: /output
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "4Gi"
              cpu: "2"
      volumes:
        - name: base-station-elastic-data
          persistentVolumeClaim:
            claimName: base-station-elastic-data
---
apiVersion: v1
kind: Service
metadata:
  name: elastic-search
spec:
  selector:
    app: elastic-search
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 9200
      targetPort: 9200
      nodePort: 30002
    - name: transport
      protocol: TCP
      port: 9300
      targetPort: 9300



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:7.17.21
          imagePullPolicy: IfNotPresent

          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elastic-search:9200"
          ports:
            - containerPort: 5601

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  selector:
    app: kibana
  type: NodePort
  ports:
    - protocol: TCP
      port: 5601
      targetPort: 5601
      nodePort: 30001

